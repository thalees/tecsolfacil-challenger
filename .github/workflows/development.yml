name: Development

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        otp: ['24.0']
        elixir: ['1.12.2']
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: Setup OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    - name: Get Deps Cache
      uses: actions/cache@v2
      id: cache-deps
      with:
        path: deps/
        key: ${{hashFiles('mix.lock')}}-deps

    - name: Get Build Cache
      uses: actions/cache@v2
      with:
        path: _build/
        key: ${{runner.os}}-${{matrix.otp}}-${{matrix.elixir}}-${{hashFiles('mix.lock')}}-build

    - name: Get deps
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: | 
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Compile
      run: mix compile

    - name: Check Tests
      run: mix test

    - name: Check Credo
      run: mix credo --strict

    - name: Check Format
      run: mix format --check-formatted
